# Palindrome Checker
#By: Vinay Balaji
########################
CapitalLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
LowercaseLetters= "abcdefghijklmnopqrstuvwxyz"
Numbers="012345678910"
Zero = 0 
########################
########################
# Function <isLetter> returns true if <char> is a letter
# in the ['A'..'Z'] range and false otherwise.
def isLetter(str):
    if (("0" <= str[Zero] <= "10") and ("a" <= str[Zero] <= "z") and ("A" <= str[Zero] <= "Z")): #removes alpha numeric characters
        return(True)    
    else:
        return(False)
#
# Function <isPal> returns true if <str> is a "palindrome"
# and false otherwise.
def isPal(str):
    Pal = str[::-1] 
    if (Pal == str):
        return(True)
    else:
        return(False)
# Function <purge> returns <str> with all non-apha-numeric 
# characters removed.
def purge(str):
    ThePerge = "" #empty string
    number = len(str)#length of the string
    for Zero in range(number):
        if (isLetter(str[Zero]) == False):
            ThePerge = ThePerge + str[Zero]
    return(ThePerge)
# Function <isAlmostPal> returns true if str is an "almost palindrome"
# and false otherwise.
def isAlmostPal(str):
    if (isPal(str) == True):
        return(False)
    else: # if/else statement 
        str = str.upper() or str.lower()
        ThePerge = purge(str)
        return isPal(ThePerge) 
Zero = 0
###############################
# Start of main execution loop
notFinished = True
while(notFinished):
  str =  input("Enter String: ") #requests user input
  print()
  print("Entered String:          ",str)
  print("Palindrome?:             ",isPal(str))  
  print("Almost Palindrome?:      ",isAlmostPal(str)) #display the results
  print()
  repeat = input("Do you wish to repeat this program [Y/N](case sensative)? ")
  notFinished = repeat == "Y"
print("FINISHED")

# Rutvik, Ritesh and I helped each other on this lab 
